5a
#include<stdio.h>
#include<conio.h>
#include"cals.h"
void main()
{
	int a,b;
	clrscr();
	printf("Enter the value of a and b:");
	scanf("%d%d",&a,&b);
	printf("ADDITION:%d\n",add(a,b));
	printf("SUBTRACTION:%d\n",sub(a,b));
	printf("MULTIPLICATION:%d\n",mul(a,b));
	printf("DIVISION:%d\n",div(a,b));
	printf(“SQUARE:%d\n”,square(a));
	printf(“CUBE:%d\n”,cube(a));
	getch();
}
cals.h
int r;
int add(int a,int b)
{     r=a+b;
return(r);  }
int sub(int a,int b)
{    r=a-b;
return(r);  }
int mul(int a,int b)
{    r=a*b;
return(r);  }
int div(int a,int b)
{    r=a/b;
return(r);  }
int square(int a)
{   r=a*a;
return (r);   }
int cube(int a)
{  r=a*a*a;
return (r);   }


5b
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class ThreeAc_bosco {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter expression: ");
        convert(sc.next());
    }
    
    static List<String> op = new ArrayList<>(Arrays.asList("(","^","*","/","+","-"));
    static int t=0;
    
    public static String convert(String s){
        List<String> tok = new ArrayList<>(Arrays.asList(s.split("")));
        for(String o : op){
            for(int i=0;i<tok.size();i++){
                if(tok.get(i).equals(o)){
                    if(tok.get(i).equals("(")){
                        String s1="";
                        int j=i+1;
                        while(!tok.get(j).equals(")")){
                            s1+=tok.get(j);
                            j++;
                        }
                        String m=convert(s1);
                        tok.set(i,m);
                        while(j>i){
                            tok.remove(j);
                            j--;
                        }
                    }
                    else{
                        int prev=i-1;
                        System.out.println("t"+t+" = "+tok.get(i-1)+" "+tok.get(i)+" "+tok.get(i+1));
                        tok.set(i-1, "t"+t);
                        t++;
                        tok.remove(i+1);
                        tok.remove(i);
                        i=prev;
                    }
                }
            }
        }
        return "t"+(t-1);
    }
}